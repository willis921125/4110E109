# CH 3.各種資料型態的許多運算
  - 整數的各種運算 [參考範例](https://www.w3schools.com/python/python_numbers.asp)  [Python Operators](https://www.w3schools.com/python/python_operators.asp)
  - 字串str的各種運算 [參考範例](https://www.w3schools.com/python/python_strings.asp)
  - 列表list的各種運算  [參考範例](https://www.w3schools.com/python/python_lists.asp)
  - 字典dict的各種運算 [參考範例](https://www.w3schools.com/python/python_dictionaries.asp)

## 整數的各種運算 [參考範例](https://www.w3schools.com/python/python_numbers.asp)  [Python Operators](https://www.w3schools.com/python/python_operators.asp)

```python
x = 10+5
print(x)
```
x=6
y=3
print(x / y)

```python
x = 10-5
print(x)
```
x=5
y=2
print(x // y)
```python
x = x - 3
print(x)
```
x = x // 3
print(x)
```python
x = x ** 3
print(x)
```
x = x ^ 3
print(x)
## 字串str的各種運算 [資料來源](https://www.w3schools.com/python/python_strings.asp)
```python
# Multiline Strings
# You can assign a multiline string to a variable by using three quotes:

a = """Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."""
print(a)
```

```python
a = "Hello, World!"
print(a[0:7])
```
a = " Hello, World! "
print(a.strip()) # returns "Hello, World!"

```python
for x in "banana":
  print(x)
```
a = "Hello, World!"
print(a.lower())

```python
b = "Hello, World!"
print(b[2:])

```
a = "Hello, World!"
print(a.replace("H", "J"))

## 列表list的各種運算  [參考範例](https://www.w3schools.com/python/python_lists.asp)

```python
thislist = ["apple", "banana", "cherry", "orange", "kiwi", "mango"]
thislist[1:3] = ["blackcurrant", "watermelon"]
print(thislist)

```
thislist = ["apple", "banana", "cherry"]
thislist.insert(1, "orange")
print(thislist)
```python
thislist = ["apple", "banana", "cherry"]
thislist.pop()
print(thislist)

```
thislist = ["apple", "banana", "cherry"]
i = 0
while i < len(thislist):
  print(thislist[i])
  i = i + 1
```python
fruits = ["apple", "banana", "cherry", "kiwi", "mango"]
newlist = []

for x in fruits:
  if "a" in x:
    newlist.append(x)

print(newlist)

```
thislist = [100, 50, 65, 82, 23]
thislist.sort()
print(thislist)
```python
thislist = ["apple", "banana", ]
mylist = list(thislist)
print(mylist)

```
list1 = ["a", "b" , "c"]
list2 = [1, 5, 7]

for x in list2:
  list1.append(x)

print(list1)
```python
thislist = ["banana", "Orange", "Kiwi", "cherry"]
thislist.sort(key = str.lower)
print(thislist)

```
thislist = ["apple", "papaya", "cherry"]
thistuple = ("kiwi", "orange")
thislist.extend(thistuple)
print(thislist)
## 字典dict的各種運算 [參考範例](https://www.w3schools.com/python/python_dictionaries.asp)

```python
thisdict = {
  "brand": "Ford",
  "electric": False,
  "year": 2004,
  "colors": ["red", "white", "green"]
}

print(thisdict)

```
car = {
"brand": "Ford",
"model": "Mustang",
"year": 2001
}

x = car.keys()

print(x) #before the change

car["color"] = "blue"

print(x) #after the change

```python
thisdict =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}

thisdict["year"] = 2022

print(thisdict)


```
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 2022
}
thisdict.update({"color": "white"})

print(thisdict)



```python


```

```python
thisdict =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
del thisdict["year"]
print(thisdict)


```



```python
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 2022
}
mydict = dict(thisdict)
print(mydict)

```

```python
child1 = {
  "name" : "Emil",
  "year" : 2004 
}
child2 = {
  "name" : "Tobias",
  "year" : 2007
}
child3 = {
  "name" : "Linus",
  "year" : 2011
}

child4 = {
  "name" : "Linus",
  "year" : 2019
}

myfamily = {
  "child1" : child1,
  "child2" : child2,
  "child3" : child3,
  "child4" : child4
}

print(myfamily)


```





